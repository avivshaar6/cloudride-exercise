name: CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
        image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set image tag
        id: set_tag
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build and tag Docker image
        working-directory: ./src
        run: |
          docker build -t hello-world-app:${{ env.IMAGE_TAG }} .

          docker tag hello-world-app:${{ env.IMAGE_TAG }} ${{ secrets.AWS_REGISTRY }}/hello-world-app:${{ env.IMAGE_TAG }}
          docker tag hello-world-app:${{ env.IMAGE_TAG }} ${{ secrets.AWS_REGISTRY }}/hello-world-app:latest


      - name: Push Docker image
        run: |
          echo "Logging in to ECR ..."
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY }}
          
          echo "Pushing image to ECR ..."
          docker push ${{ secrets.AWS_REGISTRY }}/hello-world-app:${{ env.IMAGE_TAG }}

          echo "Pushing latest image to ECR ..."
          docker push ${{ secrets.AWS_REGISTRY }}/hello-world-app:latest


  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.8"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
  
      - name: Deploy ECS service
        working-directory: ./infra
        run: |
          terraform init 
          
          terraform apply -auto-approve \
          -var-file="envs/prod.tfvars" \
          -var="image_tag=${{ needs.ci.outputs.image_tag }}" \
          --target=aws_ecs_service.app \
          --target=aws_ecs_task_definition.app \
          --target=aws_appautoscaling_target.ecs_target